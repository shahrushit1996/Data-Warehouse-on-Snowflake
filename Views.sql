

CREATE OR REPLACE SECURE VIEW VW_DIM_CHANNEL AS
(
SELECT DIMCHANNELID, CHANNELID, CHANNELCATEGORYID, CHANNELNAME, CHANNELCATEGORY
FROM DIM_CHANNEL
);

CREATE OR REPLACE SECURE VIEW VW_DIM_CUSTOMER AS
(
SELECT DIMCUSTOMERID, DIMLOCATIONID, CUSTOMERID, CUSTOMERFULLNAME, CUSTOMERFIRSTNAME, CUSTOMERLASTNAME, CUSTOMERGENDER
FROM DIM_CUSTOMER  
);

CREATE OR REPLACE SECURE VIEW VW_DIM_LOCATION AS
(
SELECT DIMLOCATIONID, ADDRESS, CITY, POSTALCODE, STATE_PROVINCE, COUNTRY
FROM DIM_LOCATION 
);

CREATE OR REPLACE SECURE VIEW VW_DIM_PRODUCT AS
(
SELECT DIMPRODUCTID, PRODUCTID, PRODUCTTYPEID, PRODUCTCATEGORYID, PRODUCTNAME, PRODUCTTYPE, PRODUCTCATEGORY,
  PRODUCTRETAILPRICE, PRODUCTWHOLESALEPRICE, PRODUCTCOST, PRODUCTRETAILPROFIT, PRODUCTWHOLESALEUNITPROFIT,
  PRODUCTRETAILPROFITMARGINUNITPERCENT, PRODUCTWHOLESALEPROFITMARGINUNITPERCENT
FROM DIM_PRODUCT
);

CREATE OR REPLACE SECURE VIEW VW_DIM_RESELLER AS
(
SELECT DIMRESELLERID, DIMLOCATIONID, RESELLERID, RESELLERNAME, CONTACTNAME, PHONENUMBER, EMAIL
FROM DIM_RESELLER
);

CREATE OR REPLACE SECURE VIEW VW_DIM_STORE AS
(
SELECT DIMSTOREID,DIMLOCATIONID, SOURCESTOREID, STORENUMBER, STOREMANAGER
FROM DIM_STORE
);

CREATE OR REPLACE SECURE VIEW VW_FACT_SALES AS
(
SELECT SALESHEADERID,SALESDETAILID, DIMPRODUCTID, DIMSTOREID, DIMRESELLERID, DIMCUSTOMERID, DIMCHANNELID, DATE_PKEY, DIMLOCATIONID,
  SALE_AMOUNT, SALE_QUANTITY, SALE_UNIT_PRICE, SALE_EXTENDED_COST, SALE_TOTAL_PROFIT
FROM FACT_SALES
);

CREATE OR REPLACE SECURE VIEW VW_FACT_PRODUCT_TARGET AS
(
SELECT DIMPRODUCTID, DATE_PKEY, TARGET_SALES_QUANTITY
FROM FACT_PRODUCT_TARGET
);

CREATE OR REPLACE SECURE VIEW VW_FACT_SRC_TARGET AS
(
SELECT DIMCHANNELID, DIMSTOREID, DIMRESELLERID, DATE_PKEY, TARGET_SALES_AMOUNT
FROM FACT_SRC_TARGET
);

CREATE OR REPLACE SECURE VIEW VW_DIM_DATE AS
(SELECT DATE_PKEY,"DATE",FULL_DATE_DESC,DAY_NUM_IN_WEEK,DAY_NUM_IN_MONTH,DAY_NUM_IN_YEAR,DAY_NAME,DAY_ABBREV,WEEKDAY_IND,US_HOLIDAY_IND,"_HOLIDAY_IND",MONTH_END_IND,WEEK_BEGIN_DATE_NKEY,WEEK_BEGIN_DATE,WEEK_END_DATE_NKEY,WEEK_END_DATE,WEEK_NUM_IN_YEAR,MONTH_NAME,MONTH_ABBREV,MONTH_NUM_IN_YEAR,YEARMONTH,QUARTER,YEARQUARTER,"YEAR",FISCAL_WEEK_NUM,FISCAL_MONTH_NUM,FISCAL_YEARMONTH,FISCAL_QUARTER,FISCAL_YEARQUARTER,FISCAL_HALFYEAR,FISCAL_YEAR,SQL_TIMESTAMP,CURRENT_ROW_IND,EFFECTIVE_DATE,EXPIRATION_DATE
FROM DIM_DATE);
--------------------------------------------

--VIEWS FOR QUESTION 1

CREATE OR REPLACE SECURE VIEW VW_STORE_PERFORMANCE_CUMMULATIVE AS
(
SELECT YEAR,MONTH_NAME,MONTH_NUM_IN_YEAR as MONTH_NUMBER, STORENUMBER,
SUM(ACT_AMT) OVER (PARTITION BY STORENUMBER ORDER BY MONTH_NUM_IN_YEAR ASC) AS ACT_CUMMULATIVE_SALE,
SUM(TARGET_AMT) OVER (PARTITION BY STORENUMBER ORDER BY MONTH_NUM_IN_YEAR ASC) AS TARGET_CUMMULATIVE_SALE
FROM
(
SELECT YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORENUMBER, SUM(TARGET_AMT) AS TARGET_AMT, SUM(ACT_AMT) AS ACT_AMT
FROM 
(
SELECT DD.Year,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORENUMBER, SUM(FS.TARGET_SALES_AMOUNT) TARGET_AMT, 0 AS ACT_AMT
FROM FACT_SRC_TARGET FS
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORENUMBER in (5,8)
GROUP BY DD.Year,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORENUMBER

UNION 

SELECT DD.Year, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR,  DS.STORENUMBER, 0 AS TARGET_AMT, SUM(FS.SALE_AMOUNT) AS ACT_AMT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORENUMBER in (5,8)
GROUP BY DD.Year, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORENUMBER
)
GROUP BY YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORENUMBER
)
ORDER BY MONTH_NUM_IN_YEAR , STORENUMBER
);  


CREATE OR REPLACE SECURE VIEW VW_STORE_PERFORMANCE AS
(
SELECT YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR AS MONTH_NUMBER, STORENUMBER, SUM(TARGET_AMT) AS TARGET_AMT, SUM(ACT_AMT) AS ACT_AMT, 
ROUND((SUM(ACT_AMT)/SUM(TARGET_AMT))*100,2) AS PERCENT_TARGET_ACHIEVED
FROM 
(
SELECT DD.Year,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORENUMBER, SUM(FS.TARGET_SALES_AMOUNT) TARGET_AMT, 0 AS ACT_AMT
FROM FACT_SRC_TARGET FS
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORENUMBER in (5,8)
GROUP BY DD.Year,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORENUMBER

UNION 

SELECT DD.Year, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR,  DS.STORENUMBER, 0 AS TARGET_AMT, SUM(FS.SALE_AMOUNT) AS ACT_AMT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORENUMBER in (5,8)
GROUP BY DD.Year, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORENUMBER
)
GROUP BY YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORENUMBER
ORDER BY YEAR,MONTH_NUM_IN_YEAR 
);

--VIEWS FOR QUESTION 2

CREATE OR REPLACE SECURE VIEW VW_BONUS_SHARE AS
(
SELECT YEAR, STORENUMBER,PROFIT, SALE,
SUM(SALE) OVER (PARTITION BY YEAR) AS TOTAL_SALE,
(SALE/TOTAL_SALE) AS PROPOTION,
ROUND
(
CASE WHEN YEAR = 2013 THEN 500000*(SALE/TOTAL_SALE)
    WHEN YEAR = 2014 THEN 400000*(SALE/TOTAL_SALE)
END,2) AS BONUS_PROPOTION
FROM
(
SELECT DD.Year, DS.STORENUMBER,
SUM(FS.SALE_AMOUNT) AS SALE, 
SUM(FS.SALE_TOTAL_PROFIT) AS PROFIT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_PRODUCT DP ON FS.DIMPRODUCTID = DP.DIMPRODUCTID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE DP.PRODUCTTYPE LIKE '%Casual' AND STORENUMBER IN (5,8)
AND DD.YEAR||DD.MONTH_NUM_IN_YEAR NOT IN (201411, 201412)  
GROUP BY DD.Year, DS.STORENUMBER
)
ORDER BY YEAR, STORENUMBER
);

--VIEWS FOR QUESTION 3

CREATE OR REPLACE SECURE VIEW VW_PRODUCT_SALES AS
(
SELECT DD.DAY_NAME, DS.STORENUMBER, DP.PRODUCTNAME, DP.PRODUCTTYPE, DP.PRODUCTCATEGORY, 
SUM(FS.SALE_QUANTITY) AS QUANTITY, SUM(FS.SALE_AMOUNT) AS SALE, SUM(FS.SALE_TOTAL_PROFIT) AS PROFIT
FROM FACT_SALES FS
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_PRODUCT DP ON FS.DIMPRODUCTID = DP.DIMPRODUCTID
WHERE STORENUMBER IN (5,8)
GROUP BY DD.DAY_NAME, DS.STORENUMBER, DP.PRODUCTNAME, DP.PRODUCTTYPE, DP.PRODUCTCATEGORY
ORDER BY DD.DAY_NAME, DS.STORENUMBER, DP.PRODUCTNAME
);


--VIEWS FOR QUESTION 4

CREATE OR REPLACE SECURE VIEW VW_STATE_PERFORMANCE AS
(
SELECT DD.DATE, DD.DAY_NAME,DD.YEAR, DD.MONTH_NAME, DL.STATE_PROVINCE, X.STORE_COUNT,
DP.PRODUCTNAME, DP.PRODUCTTYPE, DP.PRODUCTCATEGORY,
SUM(FS.SALE_QUANTITY) AS QUANTITY, SUM(FS.SALE_AMOUNT) AS SALE, SUM(FS.SALE_TOTAL_PROFIT) AS PROFIT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIMSTOREID = DS.DIMSTOREID
INNER JOIN DIM_LOCATION DL ON DS.DIMLOCATIONID = DL.DIMLOCATIONID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
INNER JOIN DIM_PRODUCT DP ON FS.DIMPRODUCTID = DP.DIMPRODUCTID
INNER JOIN 
(
SELECT DL.STATE_PROVINCE, COUNT(DS.STORENUMBER) STORE_COUNT
FROM DIM_STORE DS
INNER JOIN DIM_LOCATION DL ON DS.DIMLOCATIONID = DL.DIMLOCATIONID
WHERE DL.STATE_PROVINCE <> 'Unknown'  
GROUP BY DL.STATE_PROVINCE
) X ON DL.STATE_PROVINCE = X.STATE_PROVINCE
WHERE DL.STATE_PROVINCE <> 'Unknown'  
GROUP BY DD.DATE,  DD.DAY_NAME, DD.YEAR, DD.MONTH_NAME, DL.STATE_PROVINCE, X.STORE_COUNT,
DP.PRODUCTNAME, DP.PRODUCTTYPE, DP.PRODUCTCATEGORY
);

